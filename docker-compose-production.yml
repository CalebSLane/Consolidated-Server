version: '3.3'
services:
#this is here since we can't just pull a built image from the cloud with our libraries
  itech-fhir-libraries:
   image: itech-fhir-libraries
   build:
      context: .
      dockerfile: docker/docker-build/Dockerfile
      
  cs-frontend:
    image: cs-frontend
    build:
      context: ./cs-frontend
      dockerfile: ./Dockerfile.prod    
    depends_on:
      - dataimport.openelis.org
    restart: always
    ports:
      - 443:443
    secrets:
      - source: cert
      - source: key
    
  dataimport.openelis.org:
    image: dataimport-webapp
    build:
      context: ./dataimport-webapp
      dockerfile: docker/docker-build/Dockerfile
    restart: always
    ports:
      - 8443:8443
    secrets:
      - source: keystore
      - source: truststore
      
  fhir.openelis.org:
    build: 
      context: ./hapi-fhir-jpaserver-starter
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      - JAVA_OPTS= -Dhapi.properties=/run/secrets/hapi.properties
    ports:
      - 8444:8443
    volumes:
      - ./prod/tomcat/hapi_server.xml:/usr/local/tomcat/conf/server.xml
    secrets:
      - source: hapi.properties
      - source: keystore
      - source: truststore

  auth.openelis.org:
    image:
      quay.io/keycloak/keycloak:10.0.2
    restart: always
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=
      - DB_PORT=
      - DB_DATABASE=consolidated-server
      - DB_SCHEMA=keycloak
      - DB_USER_FILE=/run/secrets/db_user
      - DB_PASSWORD_FILE=/run/secrets/db_password
    ports:
      - 8083:8080
      - 8446:8443
    volumes:
      - ./prod/ssl/cs.crt:/etc/x509/https/tls.crt
      - ./prod/ssl/cs.key:/etc/x509/https/tls.key
    secrets:
      - source: db_user
      - source: db_password

secrets:
  hapi.properties:
    file: ./prod/properties/hapi.properties
  truststore:
    file: ./prod/ssl/cs.truststore
  keystore:
    file: ./prod/ssl/cs.keystore
  cert:
    file: ./prod/ssl/cs.crt
  key:
    file: ./prod/ssl/cs.key
  db_user:
    file: ./prod/database/user
  db_password:
    file: ./prod/database/password
